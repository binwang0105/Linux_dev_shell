1.13 The issue of resource utilization shows up in different forms in different types of operating systems. List what resources must be managed carefully in the following settings: 

a. Mainframe or minicomputer systems: 
The operating system in such cases is expected to maximize resource utilization — to assure that all available CPU time, memory, I/O, and network resources are used efficiently.

b. Workstations connected to servers: 
The operating system in such cases is expected to compromise resource utilization between individual usability and shared resource utilization — including CPU time, memory, I/O, and network resources.
c. Mobile computers: 
Because the memory, storage capacity and processing speed of mobile devices are more limited than those of PCs. The operating system in such cases is expected to be able to use memory, storage, CPU resources more efficiently and also be able to minimize power consumption at the same time.  

--------------------------------------------------------------------------------------------------------------------

1.19 What is the purpose of interrupts? How does an interrupt differ from a trap? Can traps be generated intentionally by a user program? If so, for what purpose? 

The purpose of interrupts, which are generated by hardware, is to alter the execution order of event flow. The interrupt architecture will save the address of the interrupted instruction. After the interrupt is serviced, the interrupted computation resumes as though the interrupt had not occurred. A trap, on the other hand, is a software-generated interrupt. Its purposes including catching an error (for example, division by zero or invalid memory access) and calling operating system routines.

--------------------------------------------------------------------------------------------------------------------

1.21 Some computer systems do not provide a privileged mode of operation in hardware. Is it possible to construct a secure operating system for these computer systems? Give arguments both that it is and that it is not possible.

For:
We could just accomplish a similar privileged mode of operation through system software. 

Against:
Privileged mechanism protects the operating system from users’ unwise actions, hackers’ attacks and protects users from interfering other users. Without this privileged mechanism, we cannot get the whole system more secure.

--------------------------------------------------------------------------------------------------------------------

1.27 Describe some of the challenges of designing operating systems for mobile devices compared with designing operating systems for traditional PCs.

(1) The memory capacity, the processing speed of CPU, and the number of cores of CPU of mobile devices are more limited than those of PCs. So, the operating systems for mobile devices should manage these resources, like memory and CPU more carefully and efficiently.

(2) Power consumption is also a concern, mobile devices often use batteries as their main power suppliers. So, the operating systems designed for mobile devices should manage the power consumption of the devices carefully and efficiently.

--------------------------------------------------------------------------------------------------------------------

2.13 Describe three general methods for passing parameters to the operating system.

Three general methods are used to pass parameters to the operating system. 

(1) The simplest approach is to pass the parameters in registers. In such case, there should be more registers than parameters. 
(2) Parameters could be stored in a block, or table, in memory, and we could pass the address of the block as a parameter to a register. This is the approach taken by Linux and Solaris. 
(3) Parameters also can be placed, or pushed, onto the stack by the program and popped off the stack by the operating system.

--------------------------------------------------------------------------------------------------------------------

2.16 What are the advantages and disadvantages of using the same system-call interface for manipulating both files and devices?

Advantages: Files are easy to manipulate so we could easily manipulate devices, like adding devices, deleting devices without having to learn the intricacies of each device.

Disadvantages: Device functionality may not easily map to file concepts so we may lose some functions or performance of the devices if we manipulate our devices only through file-accessing API.

--------------------------------------------------------------------------------------------------------------------

2.23  How are iOS and Android similar? How are they different?

Main Similarities: Both Android and iOS are operating systems for modern mobile devices. Also, both Android and iOS have a layered stack of software that could provide a rich set of frameworks for developing mobile applications. At the bottom of this software stack is the Linux kernel. 

Main Differences: The Android operating system was designed by the Open Handset Alliance (led primarily by Google) and was developed for Android smartphones and tablet computers. Android runs on a variety of mobile platforms and is open-sourced. Whereas iOS is designed to run on Apple mobile devices and is close-sourced.

--------------------------------------------------------------------------------------------------------------------

2.24 Explain why Java programs running on Android systems do not use the standard Java API and virtual machine. 

The standard Java API and virtual machine are designed for desktop computers, servers, and workstations. For Android mobile systems, they use their customized Java API designed by Google.

